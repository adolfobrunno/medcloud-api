<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<context:property-placeholder location="classpath:/META-INF/spring/**.properties" />
	
	<context:spring-configured />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<context:component-scan base-package="com.medcloud" />
	
	<mongo:mongo host="${db.url}" port="${db.port}" />
	<mongo:db-factory dbname="${db.name}" />
 
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
   <mongo:mapping-converter id="converter" />
 
	<bean name="gridFsTemplate"
		class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
		<constructor-arg ref="mongoDbFactory" />
		<constructor-arg ref="converter" />
	</bean>
    	
	
	<!-- Configuração para chamada de serviços REST -->
	<bean id="httpComponentsClientHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"/>
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	    <constructor-arg ref="httpComponentsClientHttpRequestFactory"/>

	     <property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	                <property name="marshaller" ref="jaxbMarshaller"/>
	                <property name="unmarshaller" ref="jaxbMarshaller"/>
	            </bean>
	            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
	        </list>
	    </property>
	</bean>
	<bean id = "jaxbMarshaller" class = "org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan" value="com.medcloud"/>
    </bean>
    
	<bean id="multipartResolver"
    	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <property name="maxUploadSize" value="50000000"/>
	</bean>
 
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Jasypt config -->
		<bean 	id="bcProvider" 			class="org.bouncycastle.jce.provider.BouncyCastleProvider" />
  	<bean 	id="randomSaltGenerator" 	class="org.jasypt.salt.RandomSaltGenerator" />

	<bean 	id="jasyptPasswordDigester"
			class="org.jasypt.digest.PooledStringDigester"
			p:poolSize="8"
			p:algorithm="SHA-256"
			p:iterations="2000"
			p:saltSizeBytes="13"
			p:provider-ref="bcProvider"
			p:saltGenerator-ref="randomSaltGenerator" />
			
	<bean 	id="passwordEncoder"
			class="org.jasypt.spring.security3.PasswordEncoder"
			p:stringDigester-ref="jasyptPasswordDigester" />
	
</beans>
